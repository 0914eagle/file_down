
/_posts/2020-04-12-DP_knapsack01.md
---
layout: post
title: 背包问题
date: 2020-04-12
categories: blog
tags: [算法,动态规划]
description: 背包问题
---

### 背包问题

#### 0-1背包问题

有一个容量为 $V$ 的背包，现在有 $N$ 个物品，每个物品的体积是 $v[i]$，价值是 $w[i]$，现在往背包里装物品，使得背包里的物品价值最大，求最大价值。

$dp[i][j]$表示前 $i$ 个物品装入容量为 $j$ 的背包所获得的最大价值。

$dp[i][j] = max(dp[i-1][j], dp[i-1][j-v[i]] + w[i])$

从上面的状态转移方程可以看出，对于每一个 $i$，只需要关心前一个状态 $dp[i-1]$，所以可以考虑从后往前遍历，从而优化空间。

